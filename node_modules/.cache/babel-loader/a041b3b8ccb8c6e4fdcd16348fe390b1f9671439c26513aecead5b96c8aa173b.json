{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raghu\\\\Desktop\\\\Reactproject\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Loweranimation from './component/Loweranimation';\nimport React, { useState } from 'react';\nimport About from './component/About';\nimport Alert from './component/Alert';\nimport { BrowserRouter as Router, Route, Routes, Switch, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"white\");\n  const [alert, setAlert] = useState(null);\n  const [color, setColor] = useState(\"white\");\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (mode === \"white\") {\n      setMode(\"dark\");\n      showAlert(\"Dark mode has been enabled\", \"warning\");\n    } else {\n      setMode(\"white\");\n      showAlert(\"White mode has been enabled\", \"warning\");\n    }\n  };\n  const colorHandle = color2 => {\n    setColor(color2);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      Title: \"Choose the Best\",\n      mode: mode,\n      toggleMode: toggleMode,\n      first: \"Home\",\n      colorHandle: colorHandle,\n      link: \"AboutUs\",\n      anythingelse: \"ContactUs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"HYYsdmXb7/TXpKQkk+LYhsnGeNY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Loweranimation","React","useState","About","Alert","BrowserRouter","Router","Route","Routes","Switch","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","color","setColor","showAlert","message","type","msg","setTimeout","toggleMode","colorHandle","color2","children","Title","first","link","anythingelse","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/raghu/Desktop/Reactproject/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './component/Navbar';\nimport Loweranimation from './component/Loweranimation';\nimport React, { useState } from 'react';\nimport About from './component/About';\nimport Alert from './component/Alert';\n\n\nimport { BrowserRouter as Router, Route, Routes, Switch, Link } from 'react-router-dom';\n\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"white\");\n  const [alert, setAlert] = useState(null);\n  \n  const [color, setColor] = useState(\"white\");\n\n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"white\") {\n      setMode(\"dark\");\n      showAlert(\"Dark mode has been enabled\", \"warning\");\n    } else {\n      setMode(\"white\");\n      showAlert(\"White mode has been enabled\", \"warning\");\n    }\n  };\n\n  const colorHandle = (color2) => {\n    setColor(color2);\n  };\n\n  return (\n    <>\n    <Navbar\n          Title=\"Choose the Best\"\n          mode={mode}\n          toggleMode={toggleMode}\n          first=\"Home\"\n          colorHandle={colorHandle}\n          link=\"AboutUs\"\n          anythingelse=\"ContactUs\"\n        />\n     \n     {/* <Router>\n     \n        \n      <Routes>\n        <Route path=\"/loweranimation\" element={<Loweranimation />} />\n        <Route path=\"/about\" element={<About />} />\n      </Routes>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,oBAAoB;AACvC,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,KAAK,MAAM,mBAAmB;AAGrC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIxF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,OAAO,CAAC;EAE3C,MAAMqB,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;IACnCL,QAAQ,CAAC;MAAEM,GAAG,EAAEF,OAAO;MAAEC,IAAI,EAAEA;IAAK,CAAC,CAAC;IACtCE,UAAU,CAAC,MAAM;MACfP,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIX,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfK,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;IACpD,CAAC,MAAM;MACLL,OAAO,CAAC,OAAO,CAAC;MAChBK,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;IACrD;EACF,CAAC;EAED,MAAMM,WAAW,GAAIC,MAAM,IAAK;IAC9BR,QAAQ,CAACQ,MAAM,CAAC;EAClB,CAAC;EAED,oBACElB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACAnB,OAAA,CAACb,MAAM;MACDiC,KAAK,EAAC,iBAAiB;MACvBf,IAAI,EAAEA,IAAK;MACXW,UAAU,EAAEA,UAAW;MACvBK,KAAK,EAAC,MAAM;MACZJ,WAAW,EAAEA,WAAY;MACzBK,IAAI,EAAC,SAAS;MACdC,YAAY,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC,gBAUJ,CAAC;AAEP;AAACvB,EAAA,CAjDQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}